/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PokemonDetailPastAbilitiesInner } from './PokemonDetailPastAbilitiesInner';
import {
    PokemonDetailPastAbilitiesInnerFromJSON,
    PokemonDetailPastAbilitiesInnerFromJSONTyped,
    PokemonDetailPastAbilitiesInnerToJSON,
    PokemonDetailPastAbilitiesInnerToJSONTyped,
} from './PokemonDetailPastAbilitiesInner';
import type { PokemonStat } from './PokemonStat';
import {
    PokemonStatFromJSON,
    PokemonStatFromJSONTyped,
    PokemonStatToJSON,
    PokemonStatToJSONTyped,
} from './PokemonStat';
import type { PokemonDetailCries } from './PokemonDetailCries';
import {
    PokemonDetailCriesFromJSON,
    PokemonDetailCriesFromJSONTyped,
    PokemonDetailCriesToJSON,
    PokemonDetailCriesToJSONTyped,
} from './PokemonDetailCries';
import type { PokemonGameIndex } from './PokemonGameIndex';
import {
    PokemonGameIndexFromJSON,
    PokemonGameIndexFromJSONTyped,
    PokemonGameIndexToJSON,
    PokemonGameIndexToJSONTyped,
} from './PokemonGameIndex';
import type { PokemonDetailHeldItems } from './PokemonDetailHeldItems';
import {
    PokemonDetailHeldItemsFromJSON,
    PokemonDetailHeldItemsFromJSONTyped,
    PokemonDetailHeldItemsToJSON,
    PokemonDetailHeldItemsToJSONTyped,
} from './PokemonDetailHeldItems';
import type { PokemonDetailPastTypesInner } from './PokemonDetailPastTypesInner';
import {
    PokemonDetailPastTypesInnerFromJSON,
    PokemonDetailPastTypesInnerFromJSONTyped,
    PokemonDetailPastTypesInnerToJSON,
    PokemonDetailPastTypesInnerToJSONTyped,
} from './PokemonDetailPastTypesInner';
import type { PokemonDetailTypesInner } from './PokemonDetailTypesInner';
import {
    PokemonDetailTypesInnerFromJSON,
    PokemonDetailTypesInnerFromJSONTyped,
    PokemonDetailTypesInnerToJSON,
    PokemonDetailTypesInnerToJSONTyped,
} from './PokemonDetailTypesInner';
import type { PokemonDetailMovesInner } from './PokemonDetailMovesInner';
import {
    PokemonDetailMovesInnerFromJSON,
    PokemonDetailMovesInnerFromJSONTyped,
    PokemonDetailMovesInnerToJSON,
    PokemonDetailMovesInnerToJSONTyped,
} from './PokemonDetailMovesInner';
import type { PokemonDetailSprites } from './PokemonDetailSprites';
import {
    PokemonDetailSpritesFromJSON,
    PokemonDetailSpritesFromJSONTyped,
    PokemonDetailSpritesToJSON,
    PokemonDetailSpritesToJSONTyped,
} from './PokemonDetailSprites';
import type { PokemonFormSummary } from './PokemonFormSummary';
import {
    PokemonFormSummaryFromJSON,
    PokemonFormSummaryFromJSONTyped,
    PokemonFormSummaryToJSON,
    PokemonFormSummaryToJSONTyped,
} from './PokemonFormSummary';
import type { PokemonSpeciesSummary } from './PokemonSpeciesSummary';
import {
    PokemonSpeciesSummaryFromJSON,
    PokemonSpeciesSummaryFromJSONTyped,
    PokemonSpeciesSummaryToJSON,
    PokemonSpeciesSummaryToJSONTyped,
} from './PokemonSpeciesSummary';
import type { PokemonDetailAbilitiesInner } from './PokemonDetailAbilitiesInner';
import {
    PokemonDetailAbilitiesInnerFromJSON,
    PokemonDetailAbilitiesInnerFromJSONTyped,
    PokemonDetailAbilitiesInnerToJSON,
    PokemonDetailAbilitiesInnerToJSONTyped,
} from './PokemonDetailAbilitiesInner';

/**
 * 
 * @export
 * @interface PokemonDetail
 */
export interface PokemonDetail {
    /**
     * 
     * @type {number}
     * @memberof PokemonDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof PokemonDetail
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof PokemonDetail
     */
    baseExperience?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PokemonDetail
     */
    height?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof PokemonDetail
     */
    isDefault?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PokemonDetail
     */
    order?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PokemonDetail
     */
    weight?: number | null;
    /**
     * 
     * @type {Array<PokemonDetailAbilitiesInner>}
     * @memberof PokemonDetail
     */
    abilities: Array<PokemonDetailAbilitiesInner>;
    /**
     * 
     * @type {Array<PokemonDetailPastAbilitiesInner>}
     * @memberof PokemonDetail
     */
    pastAbilities: Array<PokemonDetailPastAbilitiesInner>;
    /**
     * 
     * @type {Array<PokemonFormSummary>}
     * @memberof PokemonDetail
     */
    forms: Array<PokemonFormSummary>;
    /**
     * 
     * @type {Array<PokemonGameIndex>}
     * @memberof PokemonDetail
     */
    gameIndices: Array<PokemonGameIndex>;
    /**
     * 
     * @type {PokemonDetailHeldItems}
     * @memberof PokemonDetail
     */
    heldItems: PokemonDetailHeldItems;
    /**
     * 
     * @type {string}
     * @memberof PokemonDetail
     */
    readonly locationAreaEncounters: string;
    /**
     * 
     * @type {Array<PokemonDetailMovesInner>}
     * @memberof PokemonDetail
     */
    moves: Array<PokemonDetailMovesInner>;
    /**
     * 
     * @type {PokemonSpeciesSummary}
     * @memberof PokemonDetail
     */
    species: PokemonSpeciesSummary;
    /**
     * 
     * @type {PokemonDetailSprites}
     * @memberof PokemonDetail
     */
    sprites: PokemonDetailSprites;
    /**
     * 
     * @type {PokemonDetailCries}
     * @memberof PokemonDetail
     */
    cries: PokemonDetailCries;
    /**
     * 
     * @type {Array<PokemonStat>}
     * @memberof PokemonDetail
     */
    stats: Array<PokemonStat>;
    /**
     * 
     * @type {Array<PokemonDetailTypesInner>}
     * @memberof PokemonDetail
     */
    types: Array<PokemonDetailTypesInner>;
    /**
     * 
     * @type {Array<PokemonDetailPastTypesInner>}
     * @memberof PokemonDetail
     */
    pastTypes: Array<PokemonDetailPastTypesInner>;
}

/**
 * Check if a given object implements the PokemonDetail interface.
 */
export function instanceOfPokemonDetail(value: object): value is PokemonDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('abilities' in value) || value['abilities'] === undefined) return false;
    if (!('pastAbilities' in value) || value['pastAbilities'] === undefined) return false;
    if (!('forms' in value) || value['forms'] === undefined) return false;
    if (!('gameIndices' in value) || value['gameIndices'] === undefined) return false;
    if (!('heldItems' in value) || value['heldItems'] === undefined) return false;
    if (!('locationAreaEncounters' in value) || value['locationAreaEncounters'] === undefined) return false;
    if (!('moves' in value) || value['moves'] === undefined) return false;
    if (!('species' in value) || value['species'] === undefined) return false;
    if (!('sprites' in value) || value['sprites'] === undefined) return false;
    if (!('cries' in value) || value['cries'] === undefined) return false;
    if (!('stats' in value) || value['stats'] === undefined) return false;
    if (!('types' in value) || value['types'] === undefined) return false;
    if (!('pastTypes' in value) || value['pastTypes'] === undefined) return false;
    return true;
}

export function PokemonDetailFromJSON(json: any): PokemonDetail {
    return PokemonDetailFromJSONTyped(json, false);
}

export function PokemonDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): PokemonDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'baseExperience': json['base_experience'] == null ? undefined : json['base_experience'],
        'height': json['height'] == null ? undefined : json['height'],
        'isDefault': json['is_default'] == null ? undefined : json['is_default'],
        'order': json['order'] == null ? undefined : json['order'],
        'weight': json['weight'] == null ? undefined : json['weight'],
        'abilities': ((json['abilities'] as Array<any>).map(PokemonDetailAbilitiesInnerFromJSON)),
        'pastAbilities': ((json['past_abilities'] as Array<any>).map(PokemonDetailPastAbilitiesInnerFromJSON)),
        'forms': ((json['forms'] as Array<any>).map(PokemonFormSummaryFromJSON)),
        'gameIndices': ((json['game_indices'] as Array<any>).map(PokemonGameIndexFromJSON)),
        'heldItems': PokemonDetailHeldItemsFromJSON(json['held_items']),
        'locationAreaEncounters': json['location_area_encounters'],
        'moves': ((json['moves'] as Array<any>).map(PokemonDetailMovesInnerFromJSON)),
        'species': PokemonSpeciesSummaryFromJSON(json['species']),
        'sprites': PokemonDetailSpritesFromJSON(json['sprites']),
        'cries': PokemonDetailCriesFromJSON(json['cries']),
        'stats': ((json['stats'] as Array<any>).map(PokemonStatFromJSON)),
        'types': ((json['types'] as Array<any>).map(PokemonDetailTypesInnerFromJSON)),
        'pastTypes': ((json['past_types'] as Array<any>).map(PokemonDetailPastTypesInnerFromJSON)),
    };
}

export function PokemonDetailToJSON(json: any): PokemonDetail {
    return PokemonDetailToJSONTyped(json, false);
}

export function PokemonDetailToJSONTyped(value?: Omit<PokemonDetail, 'id'|'location_area_encounters'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'base_experience': value['baseExperience'],
        'height': value['height'],
        'is_default': value['isDefault'],
        'order': value['order'],
        'weight': value['weight'],
        'abilities': ((value['abilities'] as Array<any>).map(PokemonDetailAbilitiesInnerToJSON)),
        'past_abilities': ((value['pastAbilities'] as Array<any>).map(PokemonDetailPastAbilitiesInnerToJSON)),
        'forms': ((value['forms'] as Array<any>).map(PokemonFormSummaryToJSON)),
        'game_indices': ((value['gameIndices'] as Array<any>).map(PokemonGameIndexToJSON)),
        'held_items': PokemonDetailHeldItemsToJSON(value['heldItems']),
        'moves': ((value['moves'] as Array<any>).map(PokemonDetailMovesInnerToJSON)),
        'species': PokemonSpeciesSummaryToJSON(value['species']),
        'sprites': PokemonDetailSpritesToJSON(value['sprites']),
        'cries': PokemonDetailCriesToJSON(value['cries']),
        'stats': ((value['stats'] as Array<any>).map(PokemonStatToJSON)),
        'types': ((value['types'] as Array<any>).map(PokemonDetailTypesInnerToJSON)),
        'past_types': ((value['pastTypes'] as Array<any>).map(PokemonDetailPastTypesInnerToJSON)),
    };
}

