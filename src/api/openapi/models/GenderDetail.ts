/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AbilityDetailPokemonInnerPokemon } from './AbilityDetailPokemonInnerPokemon';
import {
    AbilityDetailPokemonInnerPokemonFromJSON,
    AbilityDetailPokemonInnerPokemonFromJSONTyped,
    AbilityDetailPokemonInnerPokemonToJSON,
    AbilityDetailPokemonInnerPokemonToJSONTyped,
} from './AbilityDetailPokemonInnerPokemon';
import type { GenderDetailPokemonSpeciesDetailsInner } from './GenderDetailPokemonSpeciesDetailsInner';
import {
    GenderDetailPokemonSpeciesDetailsInnerFromJSON,
    GenderDetailPokemonSpeciesDetailsInnerFromJSONTyped,
    GenderDetailPokemonSpeciesDetailsInnerToJSON,
    GenderDetailPokemonSpeciesDetailsInnerToJSONTyped,
} from './GenderDetailPokemonSpeciesDetailsInner';

/**
 * 
 * @export
 * @interface GenderDetail
 */
export interface GenderDetail {
    /**
     * 
     * @type {number}
     * @memberof GenderDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof GenderDetail
     */
    name: string;
    /**
     * 
     * @type {Array<GenderDetailPokemonSpeciesDetailsInner>}
     * @memberof GenderDetail
     */
    pokemonSpeciesDetails: Array<GenderDetailPokemonSpeciesDetailsInner>;
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof GenderDetail
     */
    requiredForEvolution: Array<AbilityDetailPokemonInnerPokemon>;
}

/**
 * Check if a given object implements the GenderDetail interface.
 */
export function instanceOfGenderDetail(value: object): value is GenderDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('pokemonSpeciesDetails' in value) || value['pokemonSpeciesDetails'] === undefined) return false;
    if (!('requiredForEvolution' in value) || value['requiredForEvolution'] === undefined) return false;
    return true;
}

export function GenderDetailFromJSON(json: any): GenderDetail {
    return GenderDetailFromJSONTyped(json, false);
}

export function GenderDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenderDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'pokemonSpeciesDetails': ((json['pokemon_species_details'] as Array<any>).map(GenderDetailPokemonSpeciesDetailsInnerFromJSON)),
        'requiredForEvolution': ((json['required_for_evolution'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
    };
}

export function GenderDetailToJSON(json: any): GenderDetail {
    return GenderDetailToJSONTyped(json, false);
}

export function GenderDetailToJSONTyped(value?: Omit<GenderDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'pokemon_species_details': ((value['pokemonSpeciesDetails'] as Array<any>).map(GenderDetailPokemonSpeciesDetailsInnerToJSON)),
        'required_for_evolution': ((value['requiredForEvolution'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
    };
}

