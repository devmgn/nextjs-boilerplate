/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationGameIndex } from './LocationGameIndex';
import {
    LocationGameIndexFromJSON,
    LocationGameIndexFromJSONTyped,
    LocationGameIndexToJSON,
    LocationGameIndexToJSONTyped,
} from './LocationGameIndex';
import type { RegionSummary } from './RegionSummary';
import {
    RegionSummaryFromJSON,
    RegionSummaryFromJSONTyped,
    RegionSummaryToJSON,
    RegionSummaryToJSONTyped,
} from './RegionSummary';
import type { LocationAreaSummary } from './LocationAreaSummary';
import {
    LocationAreaSummaryFromJSON,
    LocationAreaSummaryFromJSONTyped,
    LocationAreaSummaryToJSON,
    LocationAreaSummaryToJSONTyped,
} from './LocationAreaSummary';
import type { LocationName } from './LocationName';
import {
    LocationNameFromJSON,
    LocationNameFromJSONTyped,
    LocationNameToJSON,
    LocationNameToJSONTyped,
} from './LocationName';

/**
 * 
 * @export
 * @interface LocationDetail
 */
export interface LocationDetail {
    /**
     * 
     * @type {number}
     * @memberof LocationDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof LocationDetail
     */
    name: string;
    /**
     * 
     * @type {RegionSummary}
     * @memberof LocationDetail
     */
    region: RegionSummary;
    /**
     * 
     * @type {Array<LocationName>}
     * @memberof LocationDetail
     */
    names: Array<LocationName>;
    /**
     * 
     * @type {Array<LocationGameIndex>}
     * @memberof LocationDetail
     */
    gameIndices: Array<LocationGameIndex>;
    /**
     * 
     * @type {Array<LocationAreaSummary>}
     * @memberof LocationDetail
     */
    areas: Array<LocationAreaSummary>;
}

/**
 * Check if a given object implements the LocationDetail interface.
 */
export function instanceOfLocationDetail(value: object): value is LocationDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('region' in value) || value['region'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    if (!('gameIndices' in value) || value['gameIndices'] === undefined) return false;
    if (!('areas' in value) || value['areas'] === undefined) return false;
    return true;
}

export function LocationDetailFromJSON(json: any): LocationDetail {
    return LocationDetailFromJSONTyped(json, false);
}

export function LocationDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'region': RegionSummaryFromJSON(json['region']),
        'names': ((json['names'] as Array<any>).map(LocationNameFromJSON)),
        'gameIndices': ((json['game_indices'] as Array<any>).map(LocationGameIndexFromJSON)),
        'areas': ((json['areas'] as Array<any>).map(LocationAreaSummaryFromJSON)),
    };
}

export function LocationDetailToJSON(json: any): LocationDetail {
    return LocationDetailToJSONTyped(json, false);
}

export function LocationDetailToJSONTyped(value?: Omit<LocationDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'region': RegionSummaryToJSON(value['region']),
        'names': ((value['names'] as Array<any>).map(LocationNameToJSON)),
        'game_indices': ((value['gameIndices'] as Array<any>).map(LocationGameIndexToJSON)),
        'areas': ((value['areas'] as Array<any>).map(LocationAreaSummaryToJSON)),
    };
}

