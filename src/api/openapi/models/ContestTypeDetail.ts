/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BerryFlavorSummary } from './BerryFlavorSummary';
import {
    BerryFlavorSummaryFromJSON,
    BerryFlavorSummaryFromJSONTyped,
    BerryFlavorSummaryToJSON,
    BerryFlavorSummaryToJSONTyped,
} from './BerryFlavorSummary';
import type { ContestTypeName } from './ContestTypeName';
import {
    ContestTypeNameFromJSON,
    ContestTypeNameFromJSONTyped,
    ContestTypeNameToJSON,
    ContestTypeNameToJSONTyped,
} from './ContestTypeName';

/**
 * 
 * @export
 * @interface ContestTypeDetail
 */
export interface ContestTypeDetail {
    /**
     * 
     * @type {number}
     * @memberof ContestTypeDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof ContestTypeDetail
     */
    name: string;
    /**
     * 
     * @type {BerryFlavorSummary}
     * @memberof ContestTypeDetail
     */
    readonly berryFlavor: BerryFlavorSummary;
    /**
     * 
     * @type {Array<ContestTypeName>}
     * @memberof ContestTypeDetail
     */
    names: Array<ContestTypeName>;
}

/**
 * Check if a given object implements the ContestTypeDetail interface.
 */
export function instanceOfContestTypeDetail(value: object): value is ContestTypeDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('berryFlavor' in value) || value['berryFlavor'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    return true;
}

export function ContestTypeDetailFromJSON(json: any): ContestTypeDetail {
    return ContestTypeDetailFromJSONTyped(json, false);
}

export function ContestTypeDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContestTypeDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'berryFlavor': BerryFlavorSummaryFromJSON(json['berry_flavor']),
        'names': ((json['names'] as Array<any>).map(ContestTypeNameFromJSON)),
    };
}

export function ContestTypeDetailToJSON(json: any): ContestTypeDetail {
    return ContestTypeDetailToJSONTyped(json, false);
}

export function ContestTypeDetailToJSONTyped(value?: Omit<ContestTypeDetail, 'id'|'berry_flavor'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'names': ((value['names'] as Array<any>).map(ContestTypeNameToJSON)),
    };
}

