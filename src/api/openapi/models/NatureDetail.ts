/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatSummary } from './StatSummary';
import {
    StatSummaryFromJSON,
    StatSummaryFromJSONTyped,
    StatSummaryToJSON,
    StatSummaryToJSONTyped,
} from './StatSummary';
import type { BerrySummary } from './BerrySummary';
import {
    BerrySummaryFromJSON,
    BerrySummaryFromJSONTyped,
    BerrySummaryToJSON,
    BerrySummaryToJSONTyped,
} from './BerrySummary';
import type { NatureBattleStylePreference } from './NatureBattleStylePreference';
import {
    NatureBattleStylePreferenceFromJSON,
    NatureBattleStylePreferenceFromJSONTyped,
    NatureBattleStylePreferenceToJSON,
    NatureBattleStylePreferenceToJSONTyped,
} from './NatureBattleStylePreference';
import type { NatureDetailPokeathlonStatChangesInner } from './NatureDetailPokeathlonStatChangesInner';
import {
    NatureDetailPokeathlonStatChangesInnerFromJSON,
    NatureDetailPokeathlonStatChangesInnerFromJSONTyped,
    NatureDetailPokeathlonStatChangesInnerToJSON,
    NatureDetailPokeathlonStatChangesInnerToJSONTyped,
} from './NatureDetailPokeathlonStatChangesInner';
import type { BerryFlavorSummary } from './BerryFlavorSummary';
import {
    BerryFlavorSummaryFromJSON,
    BerryFlavorSummaryFromJSONTyped,
    BerryFlavorSummaryToJSON,
    BerryFlavorSummaryToJSONTyped,
} from './BerryFlavorSummary';
import type { NatureName } from './NatureName';
import {
    NatureNameFromJSON,
    NatureNameFromJSONTyped,
    NatureNameToJSON,
    NatureNameToJSONTyped,
} from './NatureName';

/**
 * 
 * @export
 * @interface NatureDetail
 */
export interface NatureDetail {
    /**
     * 
     * @type {number}
     * @memberof NatureDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof NatureDetail
     */
    name: string;
    /**
     * 
     * @type {StatSummary}
     * @memberof NatureDetail
     */
    decreasedStat: StatSummary;
    /**
     * 
     * @type {StatSummary}
     * @memberof NatureDetail
     */
    increasedStat: StatSummary;
    /**
     * 
     * @type {BerryFlavorSummary}
     * @memberof NatureDetail
     */
    likesFlavor: BerryFlavorSummary;
    /**
     * 
     * @type {BerryFlavorSummary}
     * @memberof NatureDetail
     */
    hatesFlavor: BerryFlavorSummary;
    /**
     * 
     * @type {Array<BerrySummary>}
     * @memberof NatureDetail
     */
    berries: Array<BerrySummary>;
    /**
     * 
     * @type {Array<NatureDetailPokeathlonStatChangesInner>}
     * @memberof NatureDetail
     */
    pokeathlonStatChanges: Array<NatureDetailPokeathlonStatChangesInner>;
    /**
     * 
     * @type {Array<NatureBattleStylePreference>}
     * @memberof NatureDetail
     */
    moveBattleStylePreferences: Array<NatureBattleStylePreference>;
    /**
     * 
     * @type {Array<NatureName>}
     * @memberof NatureDetail
     */
    names: Array<NatureName>;
}

/**
 * Check if a given object implements the NatureDetail interface.
 */
export function instanceOfNatureDetail(value: object): value is NatureDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('decreasedStat' in value) || value['decreasedStat'] === undefined) return false;
    if (!('increasedStat' in value) || value['increasedStat'] === undefined) return false;
    if (!('likesFlavor' in value) || value['likesFlavor'] === undefined) return false;
    if (!('hatesFlavor' in value) || value['hatesFlavor'] === undefined) return false;
    if (!('berries' in value) || value['berries'] === undefined) return false;
    if (!('pokeathlonStatChanges' in value) || value['pokeathlonStatChanges'] === undefined) return false;
    if (!('moveBattleStylePreferences' in value) || value['moveBattleStylePreferences'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    return true;
}

export function NatureDetailFromJSON(json: any): NatureDetail {
    return NatureDetailFromJSONTyped(json, false);
}

export function NatureDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): NatureDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'decreasedStat': StatSummaryFromJSON(json['decreased_stat']),
        'increasedStat': StatSummaryFromJSON(json['increased_stat']),
        'likesFlavor': BerryFlavorSummaryFromJSON(json['likes_flavor']),
        'hatesFlavor': BerryFlavorSummaryFromJSON(json['hates_flavor']),
        'berries': ((json['berries'] as Array<any>).map(BerrySummaryFromJSON)),
        'pokeathlonStatChanges': ((json['pokeathlon_stat_changes'] as Array<any>).map(NatureDetailPokeathlonStatChangesInnerFromJSON)),
        'moveBattleStylePreferences': ((json['move_battle_style_preferences'] as Array<any>).map(NatureBattleStylePreferenceFromJSON)),
        'names': ((json['names'] as Array<any>).map(NatureNameFromJSON)),
    };
}

export function NatureDetailToJSON(json: any): NatureDetail {
    return NatureDetailToJSONTyped(json, false);
}

export function NatureDetailToJSONTyped(value?: Omit<NatureDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'decreased_stat': StatSummaryToJSON(value['decreasedStat']),
        'increased_stat': StatSummaryToJSON(value['increasedStat']),
        'likes_flavor': BerryFlavorSummaryToJSON(value['likesFlavor']),
        'hates_flavor': BerryFlavorSummaryToJSON(value['hatesFlavor']),
        'berries': ((value['berries'] as Array<any>).map(BerrySummaryToJSON)),
        'pokeathlon_stat_changes': ((value['pokeathlonStatChanges'] as Array<any>).map(NatureDetailPokeathlonStatChangesInnerToJSON)),
        'move_battle_style_preferences': ((value['moveBattleStylePreferences'] as Array<any>).map(NatureBattleStylePreferenceToJSON)),
        'names': ((value['names'] as Array<any>).map(NatureNameToJSON)),
    };
}

