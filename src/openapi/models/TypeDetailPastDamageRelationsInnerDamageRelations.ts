/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AbilityDetailPokemonInnerPokemon } from './AbilityDetailPokemonInnerPokemon';
import {
    AbilityDetailPokemonInnerPokemonFromJSON,
    AbilityDetailPokemonInnerPokemonFromJSONTyped,
    AbilityDetailPokemonInnerPokemonToJSON,
    AbilityDetailPokemonInnerPokemonToJSONTyped,
} from './AbilityDetailPokemonInnerPokemon';

/**
 * 
 * @export
 * @interface TypeDetailPastDamageRelationsInnerDamageRelations
 */
export interface TypeDetailPastDamageRelationsInnerDamageRelations {
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof TypeDetailPastDamageRelationsInnerDamageRelations
     */
    noDamageTo: Array<AbilityDetailPokemonInnerPokemon>;
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof TypeDetailPastDamageRelationsInnerDamageRelations
     */
    halfDamageTo: Array<AbilityDetailPokemonInnerPokemon>;
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof TypeDetailPastDamageRelationsInnerDamageRelations
     */
    doubleDamageTo: Array<AbilityDetailPokemonInnerPokemon>;
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof TypeDetailPastDamageRelationsInnerDamageRelations
     */
    noDamageFrom: Array<AbilityDetailPokemonInnerPokemon>;
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof TypeDetailPastDamageRelationsInnerDamageRelations
     */
    halfDamageFrom: Array<AbilityDetailPokemonInnerPokemon>;
    /**
     * 
     * @type {Array<AbilityDetailPokemonInnerPokemon>}
     * @memberof TypeDetailPastDamageRelationsInnerDamageRelations
     */
    doubleDamageFrom: Array<AbilityDetailPokemonInnerPokemon>;
}

/**
 * Check if a given object implements the TypeDetailPastDamageRelationsInnerDamageRelations interface.
 */
export function instanceOfTypeDetailPastDamageRelationsInnerDamageRelations(value: object): value is TypeDetailPastDamageRelationsInnerDamageRelations {
    if (!('noDamageTo' in value) || value['noDamageTo'] === undefined) return false;
    if (!('halfDamageTo' in value) || value['halfDamageTo'] === undefined) return false;
    if (!('doubleDamageTo' in value) || value['doubleDamageTo'] === undefined) return false;
    if (!('noDamageFrom' in value) || value['noDamageFrom'] === undefined) return false;
    if (!('halfDamageFrom' in value) || value['halfDamageFrom'] === undefined) return false;
    if (!('doubleDamageFrom' in value) || value['doubleDamageFrom'] === undefined) return false;
    return true;
}

export function TypeDetailPastDamageRelationsInnerDamageRelationsFromJSON(json: any): TypeDetailPastDamageRelationsInnerDamageRelations {
    return TypeDetailPastDamageRelationsInnerDamageRelationsFromJSONTyped(json, false);
}

export function TypeDetailPastDamageRelationsInnerDamageRelationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypeDetailPastDamageRelationsInnerDamageRelations {
    if (json == null) {
        return json;
    }
    return {
        
        'noDamageTo': ((json['no_damage_to'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
        'halfDamageTo': ((json['half_damage_to'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
        'doubleDamageTo': ((json['double_damage_to'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
        'noDamageFrom': ((json['no_damage_from'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
        'halfDamageFrom': ((json['half_damage_from'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
        'doubleDamageFrom': ((json['double_damage_from'] as Array<any>).map(AbilityDetailPokemonInnerPokemonFromJSON)),
    };
}

export function TypeDetailPastDamageRelationsInnerDamageRelationsToJSON(json: any): TypeDetailPastDamageRelationsInnerDamageRelations {
    return TypeDetailPastDamageRelationsInnerDamageRelationsToJSONTyped(json, false);
}

export function TypeDetailPastDamageRelationsInnerDamageRelationsToJSONTyped(value?: TypeDetailPastDamageRelationsInnerDamageRelations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'no_damage_to': ((value['noDamageTo'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
        'half_damage_to': ((value['halfDamageTo'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
        'double_damage_to': ((value['doubleDamageTo'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
        'no_damage_from': ((value['noDamageFrom'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
        'half_damage_from': ((value['halfDamageFrom'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
        'double_damage_from': ((value['doubleDamageFrom'] as Array<any>).map(AbilityDetailPokemonInnerPokemonToJSON)),
    };
}

