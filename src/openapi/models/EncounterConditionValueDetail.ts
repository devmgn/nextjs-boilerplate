/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EncounterConditionSummary } from './EncounterConditionSummary';
import {
    EncounterConditionSummaryFromJSON,
    EncounterConditionSummaryFromJSONTyped,
    EncounterConditionSummaryToJSON,
    EncounterConditionSummaryToJSONTyped,
} from './EncounterConditionSummary';
import type { EncounterConditionValueName } from './EncounterConditionValueName';
import {
    EncounterConditionValueNameFromJSON,
    EncounterConditionValueNameFromJSONTyped,
    EncounterConditionValueNameToJSON,
    EncounterConditionValueNameToJSONTyped,
} from './EncounterConditionValueName';

/**
 * 
 * @export
 * @interface EncounterConditionValueDetail
 */
export interface EncounterConditionValueDetail {
    /**
     * 
     * @type {number}
     * @memberof EncounterConditionValueDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof EncounterConditionValueDetail
     */
    name: string;
    /**
     * 
     * @type {EncounterConditionSummary}
     * @memberof EncounterConditionValueDetail
     */
    condition: EncounterConditionSummary;
    /**
     * 
     * @type {Array<EncounterConditionValueName>}
     * @memberof EncounterConditionValueDetail
     */
    names: Array<EncounterConditionValueName>;
}

/**
 * Check if a given object implements the EncounterConditionValueDetail interface.
 */
export function instanceOfEncounterConditionValueDetail(value: object): value is EncounterConditionValueDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('condition' in value) || value['condition'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    return true;
}

export function EncounterConditionValueDetailFromJSON(json: any): EncounterConditionValueDetail {
    return EncounterConditionValueDetailFromJSONTyped(json, false);
}

export function EncounterConditionValueDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncounterConditionValueDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'condition': EncounterConditionSummaryFromJSON(json['condition']),
        'names': ((json['names'] as Array<any>).map(EncounterConditionValueNameFromJSON)),
    };
}

export function EncounterConditionValueDetailToJSON(json: any): EncounterConditionValueDetail {
    return EncounterConditionValueDetailToJSONTyped(json, false);
}

export function EncounterConditionValueDetailToJSONTyped(value?: Omit<EncounterConditionValueDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'condition': EncounterConditionSummaryToJSON(value['condition']),
        'names': ((value['names'] as Array<any>).map(EncounterConditionValueNameToJSON)),
    };
}

