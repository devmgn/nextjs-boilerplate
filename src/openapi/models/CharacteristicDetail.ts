/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatSummary } from './StatSummary';
import {
    StatSummaryFromJSON,
    StatSummaryFromJSONTyped,
    StatSummaryToJSON,
    StatSummaryToJSONTyped,
} from './StatSummary';
import type { CharacteristicDescription } from './CharacteristicDescription';
import {
    CharacteristicDescriptionFromJSON,
    CharacteristicDescriptionFromJSONTyped,
    CharacteristicDescriptionToJSON,
    CharacteristicDescriptionToJSONTyped,
} from './CharacteristicDescription';

/**
 * 
 * @export
 * @interface CharacteristicDetail
 */
export interface CharacteristicDetail {
    /**
     * 
     * @type {number}
     * @memberof CharacteristicDetail
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof CharacteristicDetail
     */
    geneModulo: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof CharacteristicDetail
     */
    possibleValues: Array<number>;
    /**
     * 
     * @type {StatSummary}
     * @memberof CharacteristicDetail
     */
    highestStat: StatSummary;
    /**
     * 
     * @type {Array<CharacteristicDescription>}
     * @memberof CharacteristicDetail
     */
    descriptions: Array<CharacteristicDescription>;
}

/**
 * Check if a given object implements the CharacteristicDetail interface.
 */
export function instanceOfCharacteristicDetail(value: object): value is CharacteristicDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('geneModulo' in value) || value['geneModulo'] === undefined) return false;
    if (!('possibleValues' in value) || value['possibleValues'] === undefined) return false;
    if (!('highestStat' in value) || value['highestStat'] === undefined) return false;
    if (!('descriptions' in value) || value['descriptions'] === undefined) return false;
    return true;
}

export function CharacteristicDetailFromJSON(json: any): CharacteristicDetail {
    return CharacteristicDetailFromJSONTyped(json, false);
}

export function CharacteristicDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): CharacteristicDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'geneModulo': json['gene_modulo'],
        'possibleValues': json['possible_values'],
        'highestStat': StatSummaryFromJSON(json['highest_stat']),
        'descriptions': ((json['descriptions'] as Array<any>).map(CharacteristicDescriptionFromJSON)),
    };
}

export function CharacteristicDetailToJSON(json: any): CharacteristicDetail {
    return CharacteristicDetailToJSONTyped(json, false);
}

export function CharacteristicDetailToJSONTyped(value?: Omit<CharacteristicDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gene_modulo': value['geneModulo'],
        'possible_values': value['possibleValues'],
        'highest_stat': StatSummaryToJSON(value['highestStat']),
        'descriptions': ((value['descriptions'] as Array<any>).map(CharacteristicDescriptionToJSON)),
    };
}

