/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationAreaName } from './LocationAreaName';
import {
    LocationAreaNameFromJSON,
    LocationAreaNameFromJSONTyped,
    LocationAreaNameToJSON,
    LocationAreaNameToJSONTyped,
} from './LocationAreaName';
import type { LocationSummary } from './LocationSummary';
import {
    LocationSummaryFromJSON,
    LocationSummaryFromJSONTyped,
    LocationSummaryToJSON,
    LocationSummaryToJSONTyped,
} from './LocationSummary';
import type { LocationAreaDetailPokemonEncountersInner } from './LocationAreaDetailPokemonEncountersInner';
import {
    LocationAreaDetailPokemonEncountersInnerFromJSON,
    LocationAreaDetailPokemonEncountersInnerFromJSONTyped,
    LocationAreaDetailPokemonEncountersInnerToJSON,
    LocationAreaDetailPokemonEncountersInnerToJSONTyped,
} from './LocationAreaDetailPokemonEncountersInner';
import type { LocationAreaDetailEncounterMethodRatesInner } from './LocationAreaDetailEncounterMethodRatesInner';
import {
    LocationAreaDetailEncounterMethodRatesInnerFromJSON,
    LocationAreaDetailEncounterMethodRatesInnerFromJSONTyped,
    LocationAreaDetailEncounterMethodRatesInnerToJSON,
    LocationAreaDetailEncounterMethodRatesInnerToJSONTyped,
} from './LocationAreaDetailEncounterMethodRatesInner';

/**
 * 
 * @export
 * @interface LocationAreaDetail
 */
export interface LocationAreaDetail {
    /**
     * 
     * @type {number}
     * @memberof LocationAreaDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof LocationAreaDetail
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof LocationAreaDetail
     */
    gameIndex: number;
    /**
     * 
     * @type {Array<LocationAreaDetailEncounterMethodRatesInner>}
     * @memberof LocationAreaDetail
     */
    encounterMethodRates: Array<LocationAreaDetailEncounterMethodRatesInner>;
    /**
     * 
     * @type {LocationSummary}
     * @memberof LocationAreaDetail
     */
    location: LocationSummary;
    /**
     * 
     * @type {Array<LocationAreaName>}
     * @memberof LocationAreaDetail
     */
    names: Array<LocationAreaName>;
    /**
     * 
     * @type {Array<LocationAreaDetailPokemonEncountersInner>}
     * @memberof LocationAreaDetail
     */
    pokemonEncounters: Array<LocationAreaDetailPokemonEncountersInner>;
}

/**
 * Check if a given object implements the LocationAreaDetail interface.
 */
export function instanceOfLocationAreaDetail(value: object): value is LocationAreaDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('gameIndex' in value) || value['gameIndex'] === undefined) return false;
    if (!('encounterMethodRates' in value) || value['encounterMethodRates'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    if (!('pokemonEncounters' in value) || value['pokemonEncounters'] === undefined) return false;
    return true;
}

export function LocationAreaDetailFromJSON(json: any): LocationAreaDetail {
    return LocationAreaDetailFromJSONTyped(json, false);
}

export function LocationAreaDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationAreaDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'gameIndex': json['game_index'],
        'encounterMethodRates': ((json['encounter_method_rates'] as Array<any>).map(LocationAreaDetailEncounterMethodRatesInnerFromJSON)),
        'location': LocationSummaryFromJSON(json['location']),
        'names': ((json['names'] as Array<any>).map(LocationAreaNameFromJSON)),
        'pokemonEncounters': ((json['pokemon_encounters'] as Array<any>).map(LocationAreaDetailPokemonEncountersInnerFromJSON)),
    };
}

export function LocationAreaDetailToJSON(json: any): LocationAreaDetail {
    return LocationAreaDetailToJSONTyped(json, false);
}

export function LocationAreaDetailToJSONTyped(value?: Omit<LocationAreaDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'game_index': value['gameIndex'],
        'encounter_method_rates': ((value['encounterMethodRates'] as Array<any>).map(LocationAreaDetailEncounterMethodRatesInnerToJSON)),
        'location': LocationSummaryToJSON(value['location']),
        'names': ((value['names'] as Array<any>).map(LocationAreaNameToJSON)),
        'pokemon_encounters': ((value['pokemonEncounters'] as Array<any>).map(LocationAreaDetailPokemonEncountersInnerToJSON)),
    };
}

