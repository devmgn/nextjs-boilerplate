/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender } from './EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender';
import {
    EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderFromJSON,
    EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderFromJSONTyped,
    EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderToJSON,
    EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderToJSONTyped,
} from './EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender';
import type { AbilityDetailPokemonInnerPokemon } from './AbilityDetailPokemonInnerPokemon';
import {
    AbilityDetailPokemonInnerPokemonFromJSON,
    AbilityDetailPokemonInnerPokemonFromJSONTyped,
    AbilityDetailPokemonInnerPokemonToJSON,
    AbilityDetailPokemonInnerPokemonToJSONTyped,
} from './AbilityDetailPokemonInnerPokemon';

/**
 * 
 * @export
 * @interface EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
 */
export interface EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner {
    /**
     * 
     * @type {EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    gender: EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender;
    /**
     * 
     * @type {EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    heldItem: EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender;
    /**
     * 
     * @type {EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    item: EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender;
    /**
     * 
     * @type {object}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    knownMove: object;
    /**
     * 
     * @type {object}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    knownMoveType: object;
    /**
     * 
     * @type {EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    location: EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGender;
    /**
     * 
     * @type {number}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    minAffection: number;
    /**
     * 
     * @type {number}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    minBeauty: number;
    /**
     * 
     * @type {number}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    minHappiness: number;
    /**
     * 
     * @type {number}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    minLevel: number;
    /**
     * 
     * @type {boolean}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    needsOverworldRain: boolean;
    /**
     * 
     * @type {string}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    partySpecies: string;
    /**
     * 
     * @type {string}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    partyType: string;
    /**
     * 
     * @type {string}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    relativePhysicalStats: string;
    /**
     * 
     * @type {string}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    timeOfDay: string;
    /**
     * 
     * @type {string}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    tradeSpecies: string;
    /**
     * 
     * @type {AbilityDetailPokemonInnerPokemon}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    trigger: AbilityDetailPokemonInnerPokemon;
    /**
     * 
     * @type {boolean}
     * @memberof EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner
     */
    turnUpsideDown: boolean;
}

/**
 * Check if a given object implements the EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner interface.
 */
export function instanceOfEvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner(value: object): value is EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner {
    if (!('gender' in value) || value['gender'] === undefined) return false;
    if (!('heldItem' in value) || value['heldItem'] === undefined) return false;
    if (!('item' in value) || value['item'] === undefined) return false;
    if (!('knownMove' in value) || value['knownMove'] === undefined) return false;
    if (!('knownMoveType' in value) || value['knownMoveType'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('minAffection' in value) || value['minAffection'] === undefined) return false;
    if (!('minBeauty' in value) || value['minBeauty'] === undefined) return false;
    if (!('minHappiness' in value) || value['minHappiness'] === undefined) return false;
    if (!('minLevel' in value) || value['minLevel'] === undefined) return false;
    if (!('needsOverworldRain' in value) || value['needsOverworldRain'] === undefined) return false;
    if (!('partySpecies' in value) || value['partySpecies'] === undefined) return false;
    if (!('partyType' in value) || value['partyType'] === undefined) return false;
    if (!('relativePhysicalStats' in value) || value['relativePhysicalStats'] === undefined) return false;
    if (!('timeOfDay' in value) || value['timeOfDay'] === undefined) return false;
    if (!('tradeSpecies' in value) || value['tradeSpecies'] === undefined) return false;
    if (!('trigger' in value) || value['trigger'] === undefined) return false;
    if (!('turnUpsideDown' in value) || value['turnUpsideDown'] === undefined) return false;
    return true;
}

export function EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerFromJSON(json: any): EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner {
    return EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerFromJSONTyped(json, false);
}

export function EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'gender': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderFromJSON(json['gender']),
        'heldItem': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderFromJSON(json['held_item']),
        'item': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderFromJSON(json['item']),
        'knownMove': json['known_move'],
        'knownMoveType': json['known_move_type'],
        'location': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderFromJSON(json['location']),
        'minAffection': json['min_affection'],
        'minBeauty': json['min_beauty'],
        'minHappiness': json['min_happiness'],
        'minLevel': json['min_level'],
        'needsOverworldRain': json['needs_overworld_rain'],
        'partySpecies': json['party_species'],
        'partyType': json['party_type'],
        'relativePhysicalStats': json['relative_physical_stats'],
        'timeOfDay': json['time_of_day'],
        'tradeSpecies': json['trade_species'],
        'trigger': AbilityDetailPokemonInnerPokemonFromJSON(json['trigger']),
        'turnUpsideDown': json['turn_upside_down'],
    };
}

export function EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerToJSON(json: any): EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner {
    return EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerToJSONTyped(json, false);
}

export function EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerToJSONTyped(value?: EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gender': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderToJSON(value['gender']),
        'held_item': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderToJSON(value['heldItem']),
        'item': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderToJSON(value['item']),
        'known_move': value['knownMove'],
        'known_move_type': value['knownMoveType'],
        'location': EvolutionChainDetailChainEvolvesToInnerEvolutionDetailsInnerGenderToJSON(value['location']),
        'min_affection': value['minAffection'],
        'min_beauty': value['minBeauty'],
        'min_happiness': value['minHappiness'],
        'min_level': value['minLevel'],
        'needs_overworld_rain': value['needsOverworldRain'],
        'party_species': value['partySpecies'],
        'party_type': value['partyType'],
        'relative_physical_stats': value['relativePhysicalStats'],
        'time_of_day': value['timeOfDay'],
        'trade_species': value['tradeSpecies'],
        'trigger': AbilityDetailPokemonInnerPokemonToJSON(value['trigger']),
        'turn_upside_down': value['turnUpsideDown'],
    };
}

