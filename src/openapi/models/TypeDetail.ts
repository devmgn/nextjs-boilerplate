/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypeDetailDamageRelations } from './TypeDetailDamageRelations';
import {
    TypeDetailDamageRelationsFromJSON,
    TypeDetailDamageRelationsFromJSONTyped,
    TypeDetailDamageRelationsToJSON,
    TypeDetailDamageRelationsToJSONTyped,
} from './TypeDetailDamageRelations';
import type { TypeGameIndex } from './TypeGameIndex';
import {
    TypeGameIndexFromJSON,
    TypeGameIndexFromJSONTyped,
    TypeGameIndexToJSON,
    TypeGameIndexToJSONTyped,
} from './TypeGameIndex';
import type { TypeDetailSpritesValueValue } from './TypeDetailSpritesValueValue';
import {
    TypeDetailSpritesValueValueFromJSON,
    TypeDetailSpritesValueValueFromJSONTyped,
    TypeDetailSpritesValueValueToJSON,
    TypeDetailSpritesValueValueToJSONTyped,
} from './TypeDetailSpritesValueValue';
import type { MoveDamageClassSummary } from './MoveDamageClassSummary';
import {
    MoveDamageClassSummaryFromJSON,
    MoveDamageClassSummaryFromJSONTyped,
    MoveDamageClassSummaryToJSON,
    MoveDamageClassSummaryToJSONTyped,
} from './MoveDamageClassSummary';
import type { MoveSummary } from './MoveSummary';
import {
    MoveSummaryFromJSON,
    MoveSummaryFromJSONTyped,
    MoveSummaryToJSON,
    MoveSummaryToJSONTyped,
} from './MoveSummary';
import type { AbilityName } from './AbilityName';
import {
    AbilityNameFromJSON,
    AbilityNameFromJSONTyped,
    AbilityNameToJSON,
    AbilityNameToJSONTyped,
} from './AbilityName';
import type { GenerationSummary } from './GenerationSummary';
import {
    GenerationSummaryFromJSON,
    GenerationSummaryFromJSONTyped,
    GenerationSummaryToJSON,
    GenerationSummaryToJSONTyped,
} from './GenerationSummary';
import type { TypeDetailPastDamageRelationsInner } from './TypeDetailPastDamageRelationsInner';
import {
    TypeDetailPastDamageRelationsInnerFromJSON,
    TypeDetailPastDamageRelationsInnerFromJSONTyped,
    TypeDetailPastDamageRelationsInnerToJSON,
    TypeDetailPastDamageRelationsInnerToJSONTyped,
} from './TypeDetailPastDamageRelationsInner';
import type { TypeDetailPokemonInner } from './TypeDetailPokemonInner';
import {
    TypeDetailPokemonInnerFromJSON,
    TypeDetailPokemonInnerFromJSONTyped,
    TypeDetailPokemonInnerToJSON,
    TypeDetailPokemonInnerToJSONTyped,
} from './TypeDetailPokemonInner';

/**
 * Serializer for the Type resource
 * @export
 * @interface TypeDetail
 */
export interface TypeDetail {
    /**
     * 
     * @type {number}
     * @memberof TypeDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof TypeDetail
     */
    name: string;
    /**
     * 
     * @type {TypeDetailDamageRelations}
     * @memberof TypeDetail
     */
    damageRelations: TypeDetailDamageRelations;
    /**
     * 
     * @type {Array<TypeDetailPastDamageRelationsInner>}
     * @memberof TypeDetail
     */
    pastDamageRelations: Array<TypeDetailPastDamageRelationsInner>;
    /**
     * 
     * @type {Array<TypeGameIndex>}
     * @memberof TypeDetail
     */
    gameIndices: Array<TypeGameIndex>;
    /**
     * 
     * @type {GenerationSummary}
     * @memberof TypeDetail
     */
    generation: GenerationSummary;
    /**
     * 
     * @type {MoveDamageClassSummary}
     * @memberof TypeDetail
     */
    moveDamageClass: MoveDamageClassSummary;
    /**
     * 
     * @type {Array<AbilityName>}
     * @memberof TypeDetail
     */
    names: Array<AbilityName>;
    /**
     * 
     * @type {Array<TypeDetailPokemonInner>}
     * @memberof TypeDetail
     */
    pokemon: Array<TypeDetailPokemonInner>;
    /**
     * 
     * @type {Array<MoveSummary>}
     * @memberof TypeDetail
     */
    moves: Array<MoveSummary>;
    /**
     * 
     * @type {{ [key: string]: { [key: string]: TypeDetailSpritesValueValue; }; }}
     * @memberof TypeDetail
     */
    readonly sprites: { [key: string]: { [key: string]: TypeDetailSpritesValueValue; }; };
}

/**
 * Check if a given object implements the TypeDetail interface.
 */
export function instanceOfTypeDetail(value: object): value is TypeDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('damageRelations' in value) || value['damageRelations'] === undefined) return false;
    if (!('pastDamageRelations' in value) || value['pastDamageRelations'] === undefined) return false;
    if (!('gameIndices' in value) || value['gameIndices'] === undefined) return false;
    if (!('generation' in value) || value['generation'] === undefined) return false;
    if (!('moveDamageClass' in value) || value['moveDamageClass'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    if (!('pokemon' in value) || value['pokemon'] === undefined) return false;
    if (!('moves' in value) || value['moves'] === undefined) return false;
    if (!('sprites' in value) || value['sprites'] === undefined) return false;
    return true;
}

export function TypeDetailFromJSON(json: any): TypeDetail {
    return TypeDetailFromJSONTyped(json, false);
}

export function TypeDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypeDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'damageRelations': TypeDetailDamageRelationsFromJSON(json['damage_relations']),
        'pastDamageRelations': ((json['past_damage_relations'] as Array<any>).map(TypeDetailPastDamageRelationsInnerFromJSON)),
        'gameIndices': ((json['game_indices'] as Array<any>).map(TypeGameIndexFromJSON)),
        'generation': GenerationSummaryFromJSON(json['generation']),
        'moveDamageClass': MoveDamageClassSummaryFromJSON(json['move_damage_class']),
        'names': ((json['names'] as Array<any>).map(AbilityNameFromJSON)),
        'pokemon': ((json['pokemon'] as Array<any>).map(TypeDetailPokemonInnerFromJSON)),
        'moves': ((json['moves'] as Array<any>).map(MoveSummaryFromJSON)),
        'sprites': json['sprites'],
    };
}

export function TypeDetailToJSON(json: any): TypeDetail {
    return TypeDetailToJSONTyped(json, false);
}

export function TypeDetailToJSONTyped(value?: Omit<TypeDetail, 'id'|'sprites'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'damage_relations': TypeDetailDamageRelationsToJSON(value['damageRelations']),
        'past_damage_relations': ((value['pastDamageRelations'] as Array<any>).map(TypeDetailPastDamageRelationsInnerToJSON)),
        'game_indices': ((value['gameIndices'] as Array<any>).map(TypeGameIndexToJSON)),
        'generation': GenerationSummaryToJSON(value['generation']),
        'move_damage_class': MoveDamageClassSummaryToJSON(value['moveDamageClass']),
        'names': ((value['names'] as Array<any>).map(AbilityNameToJSON)),
        'pokemon': ((value['pokemon'] as Array<any>).map(TypeDetailPokemonInnerToJSON)),
        'moves': ((value['moves'] as Array<any>).map(MoveSummaryToJSON)),
    };
}

