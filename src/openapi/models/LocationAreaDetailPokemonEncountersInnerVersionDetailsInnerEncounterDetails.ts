/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AbilityDetailPokemonInnerPokemon } from './AbilityDetailPokemonInnerPokemon';
import {
    AbilityDetailPokemonInnerPokemonFromJSON,
    AbilityDetailPokemonInnerPokemonFromJSONTyped,
    AbilityDetailPokemonInnerPokemonToJSON,
    AbilityDetailPokemonInnerPokemonToJSONTyped,
} from './AbilityDetailPokemonInnerPokemon';

/**
 * 
 * @export
 * @interface LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails
 */
export interface LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails {
    /**
     * 
     * @type {number}
     * @memberof LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails
     */
    minLevel: number;
    /**
     * 
     * @type {number}
     * @memberof LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails
     */
    maxLevel: number;
    /**
     * 
     * @type {AbilityDetailPokemonInnerPokemon}
     * @memberof LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails
     */
    conditionValues?: AbilityDetailPokemonInnerPokemon;
    /**
     * 
     * @type {number}
     * @memberof LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails
     */
    chance: number;
    /**
     * 
     * @type {AbilityDetailPokemonInnerPokemon}
     * @memberof LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails
     */
    method: AbilityDetailPokemonInnerPokemon;
}

/**
 * Check if a given object implements the LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails interface.
 */
export function instanceOfLocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails(value: object): value is LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails {
    if (!('minLevel' in value) || value['minLevel'] === undefined) return false;
    if (!('maxLevel' in value) || value['maxLevel'] === undefined) return false;
    if (!('chance' in value) || value['chance'] === undefined) return false;
    if (!('method' in value) || value['method'] === undefined) return false;
    return true;
}

export function LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetailsFromJSON(json: any): LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails {
    return LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetailsFromJSONTyped(json, false);
}

export function LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'minLevel': json['min_level'],
        'maxLevel': json['max_level'],
        'conditionValues': json['condition_values'] == null ? undefined : AbilityDetailPokemonInnerPokemonFromJSON(json['condition_values']),
        'chance': json['chance'],
        'method': AbilityDetailPokemonInnerPokemonFromJSON(json['method']),
    };
}

export function LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetailsToJSON(json: any): LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails {
    return LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetailsToJSONTyped(json, false);
}

export function LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetailsToJSONTyped(value?: LocationAreaDetailPokemonEncountersInnerVersionDetailsInnerEncounterDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min_level': value['minLevel'],
        'max_level': value['maxLevel'],
        'condition_values': AbilityDetailPokemonInnerPokemonToJSON(value['conditionValues']),
        'chance': value['chance'],
        'method': AbilityDetailPokemonInnerPokemonToJSON(value['method']),
    };
}

