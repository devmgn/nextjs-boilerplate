/* tslint:disable */
/* eslint-disable */
/**
 * PokéAPI
 * All the Pokémon data you\'ll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We\'ve covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.     
 *
 * The version of the OpenAPI document: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CharacteristicSummary } from './CharacteristicSummary';
import {
    CharacteristicSummaryFromJSON,
    CharacteristicSummaryFromJSONTyped,
    CharacteristicSummaryToJSON,
    CharacteristicSummaryToJSONTyped,
} from './CharacteristicSummary';
import type { MoveDamageClassSummary } from './MoveDamageClassSummary';
import {
    MoveDamageClassSummaryFromJSON,
    MoveDamageClassSummaryFromJSONTyped,
    MoveDamageClassSummaryToJSON,
    MoveDamageClassSummaryToJSONTyped,
} from './MoveDamageClassSummary';
import type { StatName } from './StatName';
import {
    StatNameFromJSON,
    StatNameFromJSONTyped,
    StatNameToJSON,
    StatNameToJSONTyped,
} from './StatName';
import type { StatDetailAffectingNatures } from './StatDetailAffectingNatures';
import {
    StatDetailAffectingNaturesFromJSON,
    StatDetailAffectingNaturesFromJSONTyped,
    StatDetailAffectingNaturesToJSON,
    StatDetailAffectingNaturesToJSONTyped,
} from './StatDetailAffectingNatures';
import type { StatDetailAffectingMoves } from './StatDetailAffectingMoves';
import {
    StatDetailAffectingMovesFromJSON,
    StatDetailAffectingMovesFromJSONTyped,
    StatDetailAffectingMovesToJSON,
    StatDetailAffectingMovesToJSONTyped,
} from './StatDetailAffectingMoves';

/**
 * 
 * @export
 * @interface StatDetail
 */
export interface StatDetail {
    /**
     * 
     * @type {number}
     * @memberof StatDetail
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof StatDetail
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof StatDetail
     */
    gameIndex: number;
    /**
     * 
     * @type {boolean}
     * @memberof StatDetail
     */
    isBattleOnly?: boolean;
    /**
     * 
     * @type {StatDetailAffectingMoves}
     * @memberof StatDetail
     */
    affectingMoves: StatDetailAffectingMoves;
    /**
     * 
     * @type {StatDetailAffectingNatures}
     * @memberof StatDetail
     */
    affectingNatures: StatDetailAffectingNatures;
    /**
     * 
     * @type {Array<CharacteristicSummary>}
     * @memberof StatDetail
     */
    characteristics: Array<CharacteristicSummary>;
    /**
     * 
     * @type {MoveDamageClassSummary}
     * @memberof StatDetail
     */
    moveDamageClass: MoveDamageClassSummary;
    /**
     * 
     * @type {Array<StatName>}
     * @memberof StatDetail
     */
    names: Array<StatName>;
}

/**
 * Check if a given object implements the StatDetail interface.
 */
export function instanceOfStatDetail(value: object): value is StatDetail {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('gameIndex' in value) || value['gameIndex'] === undefined) return false;
    if (!('affectingMoves' in value) || value['affectingMoves'] === undefined) return false;
    if (!('affectingNatures' in value) || value['affectingNatures'] === undefined) return false;
    if (!('characteristics' in value) || value['characteristics'] === undefined) return false;
    if (!('moveDamageClass' in value) || value['moveDamageClass'] === undefined) return false;
    if (!('names' in value) || value['names'] === undefined) return false;
    return true;
}

export function StatDetailFromJSON(json: any): StatDetail {
    return StatDetailFromJSONTyped(json, false);
}

export function StatDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'gameIndex': json['game_index'],
        'isBattleOnly': json['is_battle_only'] == null ? undefined : json['is_battle_only'],
        'affectingMoves': StatDetailAffectingMovesFromJSON(json['affecting_moves']),
        'affectingNatures': StatDetailAffectingNaturesFromJSON(json['affecting_natures']),
        'characteristics': ((json['characteristics'] as Array<any>).map(CharacteristicSummaryFromJSON)),
        'moveDamageClass': MoveDamageClassSummaryFromJSON(json['move_damage_class']),
        'names': ((json['names'] as Array<any>).map(StatNameFromJSON)),
    };
}

export function StatDetailToJSON(json: any): StatDetail {
    return StatDetailToJSONTyped(json, false);
}

export function StatDetailToJSONTyped(value?: Omit<StatDetail, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'game_index': value['gameIndex'],
        'is_battle_only': value['isBattleOnly'],
        'affecting_moves': StatDetailAffectingMovesToJSON(value['affectingMoves']),
        'affecting_natures': StatDetailAffectingNaturesToJSON(value['affectingNatures']),
        'characteristics': ((value['characteristics'] as Array<any>).map(CharacteristicSummaryToJSON)),
        'move_damage_class': MoveDamageClassSummaryToJSON(value['moveDamageClass']),
        'names': ((value['names'] as Array<any>).map(StatNameToJSON)),
    };
}

